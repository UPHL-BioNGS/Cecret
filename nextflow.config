//########## manifest values     ##########
manifest {
  mainScript        = 'main.nf'
  nextflowVersion   = '>=22.10.7'
  name              = 'Cecret'
  author            = 'Erin Young'
  homePage          = 'https://github.com/UPHL-BioNGS/Cecret'
  version           = 'v3.15.24205'
  defaultBranch     = 'master'
  recurseSubmodules = false
  description       = 'Reference-based consensus creation'
  doi               = ''
}

//########## Setting the Profile ##########
profiles {
  docker {
    includeConfig './configs/docker.config'
  }
  singularity {
    includeConfig './configs/singularity.config'
  }
  artic_V3 {
    params.primer_set = 'ncov_V3'
  }
  artic_V4 {
    params.primer_set = 'ncov_V4'
  }
  artic_V4_1 {
    params.primer_set = 'ncov_V4.1'
  }
  artic_V5_3_2 {
    params.primer_set = 'ncov_V5.3.2'
  }
  sarscov2 {
    includeConfig './configs/sarscov2.config'
  }
  mpx {
    includeConfig './configs/mpx.config'
  }
  mpx_idt {
    includeConfig './configs/mpx_idt.config'
  }
  mpx_primalseq {
    includeConfig './configs/mpx_primalseq.config'
  }
  mpx_yale {
    includeConfig './configs/mpx_yale.config'
  }
  wastewater {
    includeConfig './configs/sarscov2_wastewater.config'
  }  
  uphl {
    includeConfig './configs/uphl.config'
  }
  test {
    includeConfig './configs/test.config'
  }
  test1 {
    includeConfig './configs/test1.config'
  }
  test2 {
    includeConfig './configs/test2.config'
  }
}

def trace_timestamp = new java.util.Date().format('yyyy-MM-dd_HH-mm-ss')
timeline {
  enabled = true
  file    = "cecret_execution_timeline_${trace_timestamp}.html"
}
report {
  enabled = true
  file    = "cecret_execution_report_${trace_timestamp}.html"
}
trace {
  enabled = true
  file    = "cecret_execution_trace_${trace_timestamp}.txt"
}
dag {
  enabled = true
  file    = "cecret_pipeline_dag_${trace_timestamp}.html"
}

params.maxcpus = 8
params.medcpus = 4

process {

  errorStrategy = { task.attempt < 2 ? 'retry' : 'ignore'}
  maxRetries    = 1
  maxErrors     = '-1'

  withLabel:process_single {
    cpus   = 1
  }
  withLabel:process_medium {
    cpus   = params.medcpus
  }
  withLabel:process_high {
    cpus   = params.maxcpus
  }
}
