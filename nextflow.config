/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    UPHL-BioNGS/Cecret Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Default config options for all compute environments
----------------------------------------------------------------------------------------
*/

// Global default params, used in configs
params {

    // Input options
    input                                = null
    sample_sheet                         = params.input
    reads                                = null
    single_reads                         = null
    fastas                               = null
    multifastas                          = null
    nanopore                             = null
    sra_accessions                       = []
    genome_accessions                    = []
    primer_bed                           = null
    amplicon_bed                         = null
    primer_set                           = 'ncov_V5.3.2'
    reference_genome                     = null
    gff                                  = null
    outdir                               = 'cecret'
    species                              = 'sarscov2'

    //# specifying the core workflow
    trimmer                              = 'ivar'
    cleaner                              = 'seqyclean'
    aligner                              = 'bwa'
    msa                                  = 'mafft'

    //# to toggle off processes
    artic                                = true
    artic_filter                         = true
    aci                                  = false
    bbnorm                               = false
    bcftools_variants                    = true
    fastqc                               = true
    igv_reports                          = false
    ivar_variants                        = false
    samtools_qc                          = true
    samtools_ampliconstats               = true
    samtools_plot_ampliconstats          = true
    markdup                              = false
    filter                               = false
    multiqc                              = true

    //# for optional route of tree generation and counting snps between samples
    relatedness                          = false
    snpdists                             = true
    iqtree2                              = true
    heatcluster                          = true
    phytreeviz                           = true

    //# parameters for processes with their default values
    aci_options                          = ''
    artic_options                        = '--normalise 200 --model ont --model-dir /opt/conda/envs/artic/bin/models/'
    artic_read_filtering_options         = '--min-length 400 --max-length 700'
    bbnorm_options                       = 'target=200 min=5'
    bcftools_variants_options            = ''
    fastp_options                        = ''
    fastqc_options                       = ''
    filter_options                       = ''
    heatcluster_options                  = '-t png'
    igv_reports_options                  = '--flanking 1000'
    iqtree2_options                      = '-ninit 2 -n 2 -me 0.05 -m GTR'
    ivar_consensus_options               = '-q 20 -t 0.6 -n N'
    ivar_trim_options                    = ''
    ivar_variants_options                = '-q 20 -t 0.6'
    minimap2_options                     = '-K 20M'
    minimum_depth                        = 100
    mpileup_depth                        = 8000
    multiqc_options                      = ''
    mafft_options                        = '--maxambiguous 0.5'
    phytreeviz_options                   = ''
    samtools_ampliconclip_options        = ''
    samtools_coverage_options            = ''
    samtools_flagstat_options            = ''
    samtools_depth_options               = ''
    samtools_stats_options               = ''
    samtools_ampliconstats_options       = '--max-amplicon-length 3000 --max-amplicons 3000'
    samtools_plot_ampliconstats_options  = '-size 1200,900 -size2 1200,900 -size3 1200,900'
    samtools_markdup_options             = ''
    samtools_fixmate_options             = ''
    seqyclean_contaminant_file           = '/Adapters_plus_PhiX_174.fasta'
    seqyclean_options                    = '-minlen 25 -qual'
    snpdists_options                     = '-c'

    //# for optional contamination determination
    kraken2                              = false
    kraken2_db                           = null
    kraken2_options                      = ''

    //# for using an included version of nextclade dataset
    download_nextclade_dataset           = true

    //# organism specific
    freyja                               = true
    freyja_aggregate                     = true
    nextclade                            = true
    pangolin                             = true
    pango_aliasor                        = true
    vadr                                 = true

    pangolin_options                     = ''
    pango_aliasor_options                = ''
    vadr_mdir                            = '/opt/vadr/vadr-models'
    vadr_reference                       = 'sarscov2'
    vadr_options                         = '--split --glsearch -s -r --nomisc --lowsim5seq 6 --lowsim3seq 6 --alt_fail lowscore,insertnn,deletinn'
    vadr_trim_options                    = '--minlen 50 --maxlen 30000'
    nextclade_options                    = ''
    nextclade_dataset                    = 'sars-cov-2'
    freyja_variants_options              = ''
    freyja_demix_options                 = ''
    iqtree2_outgroup                     = 'MN908947'

    freyja_aggregate_options             = ''
    freyja_plot_options                  = ''
    freyja_plot_filetype                 = 'png'

    // the following were stolen from other nf-core workflows and may have no functionality here

    // Boilerplate options
    publish_dir_mode             = 'copy'
    email                        = null
    email_on_fail                = null
    plaintext_email              = false
    monochrome_logs              = false
    hook_url                     = null
    help                         = false
    version                      = false
    pipelines_testdata_base_path = 'https://raw.githubusercontent.com/nf-core/test-datasets/'

    // Config options
    config_profile_name        = null
    config_profile_description = null
    custom_config_version      = 'master'
    custom_config_base         = "https://raw.githubusercontent.com/nf-core/configs/${params.custom_config_version}"
    config_profile_contact     = null
    config_profile_url         = null

    // Schema validation default options
    validationFailUnrecognisedParams = false
    validationLenientMode            = false
    validationShowHiddenParams       = false
    validate_params                  = true
}

// Load nf-core custom profiles from different Institutions
includeConfig !System.getenv('NXF_OFFLINE') && params.custom_config_base ? "${params.custom_config_base}/nfcore_custom.config" : "/dev/null"


//########## Setting the Profile ##########
profiles {
  docker {
    docker.enabled          = true
    conda.enabled           = false
    singularity.enabled     = false
    podman.enabled          = false
    shifter.enabled         = false
    charliecloud.enabled    = false
    apptainer.enabled       = false
    docker.runOptions       = '-u $(id -u):$(id -g)'
  }
  apptainer {
    singularity.enabled     = false
    singularity.autoMounts  = false
    conda.enabled           = false
    docker.enabled          = false
    podman.enabled          = false
    shifter.enabled         = false
    charliecloud.enabled    = false
    apptainer.enabled       = true
    apptainer.autoMounts    = true
  }
  singularity {
    singularity.enabled     = true
    singularity.autoMounts  = true
    conda.enabled           = false
    docker.enabled          = false
    podman.enabled          = false
    shifter.enabled         = false
    charliecloud.enabled    = false
    apptainer.enabled       = false
  }
  podman {
    podman.enabled          = true
    conda.enabled           = false
    docker.enabled          = false
    singularity.enabled     = false
    shifter.enabled         = false
    charliecloud.enabled    = false
    apptainer.enabled       = false
  }
  artic_V3 {
    params.primer_set = 'ncov_V3'
  }
  artic_V4 {
    params.primer_set = 'ncov_V4'
  }
  artic_V4_1 {
    params.primer_set = 'ncov_V4.1'
  }
  artic_V5_3_2 {
    params.primer_set = 'ncov_V5.3.2'
  }
  sarscov2 {
    includeConfig './conf/sarscov.config'
  }
  mpx {
    includeConfig './conf/mpx.config'
  }
  mpx_idt {
    includeConfig './conf/mpx_idt.config'
  }
  mpx_primalseq {
    includeConfig './conf/mpx_primalseq.config'
  }
  mpx_yale {
    includeConfig './conf/mpx_yale.config'
  }
  mev {
    includeConfig './conf/mev.config'
  }
  slurm {
    includeConfig './conf/slurm.config'
  }
  wastewater {
    includeConfig './conf/sarscov2_wastewater.config'
  }  
  uphl {
    includeConfig './conf/uphl.config'
  }
  test {
    includeConfig './conf/test.config'
  }
  test1 {
    includeConfig './conf/test1.config'
  }
  test2 {
    includeConfig './conf/test2.config'
  }
  test3 {
    includeConfig './conf/test3.config'
  }
  test_full { 
    includeConfig 'conf/test.config' 
  }
  latest {
    includeConfig 'conf/latest.config'
  }
}

def trace_timestamp = new java.util.Date().format('yyyy-MM-dd_HH-mm-ss')
timeline {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_timeline_${trace_timestamp}.html"
}
report {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_report_${trace_timestamp}.html"
}
trace {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_trace_${trace_timestamp}.txt"
}
dag {
    enabled = true
    file    = "${params.outdir}/pipeline_info/pipeline_dag_${trace_timestamp}.html"
}

//########## manifest values     ##########
manifest {
  name              = 'UPHL-BioNGS/Cecret'
  author            = 'Erin Young'
  homePage          = 'https://github.com/UPHL-BioNGS/Cecret'
  description       = 'Reference-based consensus creation'
  mainScript        = 'main.nf'
  defaultBranch     = 'master'
  nextflowVersion   = '>=24.04.4'
  version           = 'v3.27.25210'
  description       = 'Reference-based consensus creation'
  doi               = ''
}

//######## nf-core assistance #####
validation {
    help {
        enabled = true
        command = "nextflow run UPHL-BioNGS/Cecret -profile <docker/singularity/.../institute> --sample_sheet samplesheet.csv --outdir cecret"
        fullParameter = "help_full"
        showHiddenParameter = "show_hidden"
    }
}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

// Load modules.config for DSL2 module specific options
includeConfig 'conf/modules.config'
