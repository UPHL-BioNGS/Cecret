//# Docker Params -------------------------------------------
//docker.enabled = true
//docker.runOptions = '-u \$(id -u):\$(id -g)'
//docker.sudo = false
//docker.temp = /tmp
//docker.remove = true
//docker.registry = ''
//docker.fixOwnership = true
//docker.engineOptions = ''
//docker.mountFlags = ''

//# Singularity Params --------------------------------------
//singularity.enabled = true
//singularity.autoMounts = true
//singularity.runOptions = ""
//process.stageInMode = "link"
//singularity.engineOptions = ''
//singularity.cacheDir = ''

//# AWS Batch Params ----------------------------------------
//process.executor = 'awsbatch'
//process.queue = ''
//aws.batch.cliPath = '/home/ec2-user/miniconda/bin/aws'
//aws.region = 'us-east-1'
//workDir = 's3://'

//# Google Cloud Params -------------------------------------
//process.executor = ''
//google.project = ''
//google.location = ''
//google.region = ''
//workDir = ''
//google.lifeSciences.bootDiskSize = 50.GB

//# Nextflow Tower ------------------------------------------
//tower.accessToken = ''
//tower.enabled = true

//# Adjustable Workflow parameters ---------------------------
//params.reads = 'reads'
//params.single_reads = 'single_reads'
//params.fastas = 'fastas'
//params.outdir = 'cecret'

//# Basic CPU usage grouping
params.maxcpus = 8
params.medcpus = 4

//# Reference files for SARS-CoV-2 (part of the github repository)
//params.reference_genome = "Cecret/configs/MN908947.3.fasta"
//params.gff_file = "Cecret/configs/MN908947.3.gff"
//params.primer_set = 'ncov_V3'
//params.primer_set = 'ncov_V4'
//params.primer_set = 'ncov_V4.1'
//params.primer_bed = "Cecret/configs/artic_V4_SARS-CoV-2.scheme.bed"
//params.amplicon_bed = "Cecret/configs/artic_V4_SARS-CoV-2.insert.bed"

//# Tool toggles
//params.trimmer = 'ivar'
//params.trimmer = 'samtools'
//params.trimmer = 'none'
//params.cleaner = 'seqyclean'
//params.cleaner = 'fastp'
//params.aligner = 'bwa'
//params.aligner = 'minimap2'
//params.msa = 'mafft'
//params.msa = 'nextclade'
//params.msa = 'nextalign'

//# Docker Images -------------------------------------------
fastqc_container = 'staphb/fastqc:latest'
seqyclean_container = 'staphb/seqyclean:latest'
fastp_container = 'bromberglab/fastp:latest'
bwa_container = 'staphb/bwa:latest'
minimap2_container = 'staphb/minimap2:latest'
samtools_container = 'staphb/samtools:latest'
ivar_container = 'staphb/ivar:latest'
bcftools_container = 'staphb/bcftools:latest'
bamsnap_container = 'danielmsk/bamsnap:latest'
kraken2_container = 'staphb/kraken2:latest'
bedtools_container = 'staphb/bedtools:latest'
pangolin_container = 'staphb/pangolin:latest'
nextclade_container = 'nextstrain/nextclade:latest'
vadr_container = 'staphb/vadr:latest'
parallel_perl_container = 'staphb/parallel-perl:latest'
mafft_container = 'staphb/mafft:latest'
nextalign_container = 'nextstrain/nextalign:latest'
snp_dists_container = 'staphb/snp-dists:latest'
iqtree2_container = 'staphb/iqtree2:latest'
pandas_container = 'quay.io/biocontainers/pandas:1.1.5'

//# Workflow parameters --------------------------------------

//# For process seqyclean
//params.cleaner = 'seqyclean'
//# The seqyclean contaminant file MUST be in the container. It is not put through a channel.
//params.seqyclean_contaminant_file = "/Adapters_plus_PhiX_174.fasta"
//params.seqyclean_options = '-minlen 25 -qual'

//# For process fastp
//params.cleaner = 'fastp'
//params.fastp_options = ''

//# For process bwa
//params.aligner = 'bwa'

//# For process minimap2
//params.aligner = 'minimap2'
//params.minimap2_options = '-K 20M'

//# For process fastqc
//params.fastqc = true
//params.fastqc_options = ''

//# For process sort
//# No editable parameters

//# For process filter
//params.filter_options = ''
//params.filter = true

//# For process ivar_trim
//params.trimmer == 'ivar'
//params.ivar_trim_options = ''

//# For process samtools_ampliconclip
//params.trimmer == 'samtools'
//params.samtools_ampliconclip_options = ''

//# trimming can also be skipped with
//params.trimmer == 'none'

//# For process ivar_variants
//params.ivar_variants = true
//# params.minimum_depth is shared with ivar_consensus, summary, and samtools_depth
//params.minimum_depth = 100
//# params.mpileup_depth is shared with ivar_consensus and bcftools_variants
//params.mpileup_depth = 8000
//params.ivar_variants_options = '-q 20 -t 0.6 '

//# For process ivar_consensus
//# params.minimum_depth is shared with ivar_variants, summary, and samtools_depth
//params.minimum_depth = 100
//# params.mpileup_depth is shared with ivar_variants and bcftools_variants
//params.mpileup_depth = 8000
//params.ivar_consensus_options = '-q 20 -t 0.6 -n N'

//# For process fasta_prep
//# No editable parameters

//# For process bcftools_variants
//params.bcftools_variants = true
//# params.mpileup_depth is shared with ivar_variants and ivar_consensus
//params.mpileup_depth = 8000

//# For process bamsnap
//params.bamsnap = true
//params.bamsnap_options = ''

//# For process samtools_stats
//params.samtools_stats_options = ''
//params.samtools_stats = true

//# For process samtools_coverage
//params.samtools_coverage_options = ''
//params.samtools_coverage = true

//# For process samtools_flagstat
//params.samtools_flagstat_options = ''
//params.samtools_flagstat = true

//# For process samtools_depth
//# params.minimum_depth is shared with ivar_variants, ivar_consensus, and summary
//params.minimum_depth = 100
//params.samtools_depth_options = ''
//params.samtools_depth = true

//# For process kraken2
//params.kraken2_options = ''
//params.kraken2 = true
//params.kraken2_db = ''
//params.kraken2_organism = "Severe acute respiratory syndrome-related coronavirus"

//# For process bedtools_multicov
//params.bedtools_multicov = true
//params.bedtools_options = '-f .1'

//# For process samtools_ampliconstats
//params.samtools_ampliconstats_options = ''
//params.samtools_ampliconstats = true

//# For process samtools_plot_ampliconstats
//params.samtools_plot_ampliconstats_options = '-size 1200,900 -size2 1200,900 -size3 1200,900'
//params.samtools_plot_ampliconstats = true

//# For process pangolin
//params.pangolin_options = ''
//params.pangolin = true

//# For process nextclade
//params.nextclade_dataset = 'sars-cov-2'
//params.nextclade_options = ''
//params.nextclade = true

//# For process vadr
//params.vadr_options = '--split --glsearch -s -r --nomisc --lowsim5seq 6 --lowsim3seq 6 --alt_fail lowscore,insertnn,deletinn'
//params.vadr_reference = 'sarscov2'
//# If using a different organism, the models must be in the container. Even if the path is changed.
//params.vadr_mdir = '/opt/vadr/vadr-models'
//params.vadr = true
//params.vadr_trim_options = '--minlen 50 --maxlen 30000'

//# For process summary
//# params.minimum_depth is shared with ivar_variants, ivar_consensus, and samtools_depth
//params.minimum_depth = 100

//# For process mafft
//params.msa == 'mafft'
//params.mafft_options = '--maxambiguous 0.5'
//params.relatedness = true

//# For process nextalign
//params.msa == 'nextalign'
//params.nextalign_options = '--genes E,M,N,ORF1a,ORF1b,ORF3a,ORF6,ORF7a,ORF7b,ORF8,ORF9b,S --include-reference'
//params.relatedness = true

//# For process snpdists
//params.snpdists_options = ''
//params.snpdists = true

//# For process iqtree
//params.iqtree2_outgroup = '-o MN908947'
//params.iqtree2_options = '-ninit 2 -n 2 -me 0.05 -m GTR'
//params.iqtree2 = true

//# For process rename
//params.rename = true
//params.sample_file = 'covid_samples.csv'
//params.gisaid_threshold = '25000'
//params.genbank_threshold = '15000'

process {

  errorStrategy = 'retry'
  maxRetries = 1

  cpus = 1
  memory = '1 GB'

  withName:fastqc{
    container = fastqc_container
  }

  withName:seqyclean{
    container = seqyclean_container
  }

  withName:fastp{
    container = fastp_container
  }

  withName:bwa{
    cpus = params.maxcpus
    container = bwa_container
  }

  withName:minimap2{
    cpus = params.maxcpus
    container = minimap2_container
  }

  withName:sort{
    container = samtools_container
  }

  withName:filter{
    container = samtools_container
  }

  withName:ivar_trim{
    container = ivar_container
  }

  withName:samtools_ampliconclip{
    container = samtools_container
  }

  withName:ivar_variants{
    container = ivar_container
    memory = {2.GB * task.attempt}
    errorStrategy = 'retry'
    maxRetries = 2
  }

  withName:ivar_consensus{
    memory = '8 GB'
    container = ivar_container
  }

  withName:fasta_prep{
    container = pandas_container
  }

  withName:bcftools_variants{
   container = bcftools_container
  }

  withName:bamsnap{
    cpus = params.maxcpus
    container = bamsnap_container
    errorStrategy = 'ignore'
  }

  withName:samtools_stats{
    container = samtools_container
  }

  withName:samtools_coverage{
    container = samtools_container
  }

  withName:samtools_flagstat{
    container = samtools_container
  }

  withName:samtools_depth{
    container = samtools_container
  }

  withName:kraken2{
    cpus = params.maxcpus
    container = kraken2_container
  }

  withName:bedtools_multicov{
    container = bedtools_container
  }

  withName:samtools_ampliconstats{
    container = samtools_container
  }

  withName:samtools_plot_ampliconstats{
    container = samtools_container
  }

  withName:pangolin{
    container = pangolin_container
  }

  withName:nextclade{
    cpus = params.medcpus
    memory = '4 GB'
    container = nextclade_container
  }

  withName:vadr{
    cpus = params.medcpus
    container = 'staphb/vadr:latest'
    errorStrategy = 'ignore'
  }

  withName:summary{
    container = pandas_container
  }

  withName:combine_results{
    container = pandas_container
  }

  withName:mafft{
    cpus = params.maxcpus
    container = mafft_container
    errorStrategy = 'retry'
    maxRetries = 2
  }

  withName:nextalign{
    cpus = params.maxcpus
    container = nextalign_container
  }

  withName:snpdists{
    container = snp_dists_container
  }

  withName:iqtree2{
   cpus = params.maxcpus
   container = iqtree2_container
  }

  withName:rename{
    container = parallel_perl_container
    stageInMode = 'copy'
  }
}
