//# Docker Params -------------------------------------------
//docker.enabled = true
//docker.runOptions = '-u \$(id -u):\$(id -g)'
//docker.sudo = false
//docker.temp = /tmp
//docker.remove = true
//docker.registry = ''
//docker.fixOwnership = true
//docker.engineOptions = ''
//docker.mountFlags = ''

//# Singularity Params --------------------------------------
//singularity.enabled = true
//singularity.autoMounts = true
//singularity.runOptions = ""
//process.stageInMode = "link"
//singularity.engineOptions = ''
//singularity.cacheDir = ''

//# AWS Batch Params ----------------------------------------
//process.executor = 'awsbatch'
//process.queue = ''
//aws.batch.cliPath = '/home/ec2-user/miniconda/bin/aws'
//aws.region = 'us-east-1'
//workDir = 's3://'

//# Google Cloud Params -------------------------------------
//process.executor = ''
//google.project = ''
//google.location = ''
//google.region = ''
//workDir = ''
//google.lifeSciences.bootDiskSize = 50.GB

//# Nextflow Tower ------------------------------------------
//tower.accessToken = ''
//tower.enabled = true

//# Adjustable Workflow parameters ---------------------------
//params.reads = 'reads'
//params.single_reads = 'single_reads'
//params.fastas = 'fastas'
params.outdir = 'cecret'

//# Basic CPU usage grouping
params.maxcpus = 8
params.medcpus = 4

//# Specifying the 'sarscov2', 'mpx', or 'other'
//params.species = 'sarscov2'

//# Reference files for SARS-CoV-2 (part of the github repository)
//params.reference_genome = "Cecret/configs/MN908947.3.fasta"
//params.gff_file = "Cecret/configs/MN908947.3.gff"
//params.primer_bed = "Cecret/configs/artic_V3_nCoV-2019.bed"
//params.amplicon_bed = "Cecret/configs/nCoV-2019.insert.bed"

//# Tool toggles
//# trimmer options are 'ivar' and 'samtools' or 'none' for no primer trimming
//params.trimmer = 'ivar'
//# fastq preprocessing options are 'seqyclean' or 'fastp'
//params.cleaner = 'seqyclean'
//# aligning options are 'bwa' or 'minimap2'
//params.aligner = 'bwa'
//# muliple sequencing alignment options are 'mafft' or 'nextalign'
//params.msa = 'mafft'

//# Docker Images -------------------------------------------
//# static containers (may become out of date)
bcftools_container      = 'staphb/bcftools:1.16'
bedtools_container      = 'staphb/bedtools:2.30.0'
bwa_container           = 'staphb/bwa:0.7.17'
fastp_container         = 'staphb/fastp:0.23.2'
fastqc_container        = 'staphb/fastqc:0.11.9'
freyja_container        = 'staphb/freyja:1.3.12'
iqtree2_container       = 'staphb/iqtree2:2.1.2'
ivar_container          = 'staphb/ivar:1.3.2'
kraken2_container       = 'staphb/kraken2:2.1.2-no-db'
mafft_container         = 'staphb/mafft:7.505'
minimap2_container      = 'staphb/minimap2:2.24'
multiqc_container       = 'quay.io/biocontainers/multiqc:1.14--pyhdfd78af_0'
pandas_container        = 'quay.io/biocontainers/pandas:1.1.5'
samtools_container      = 'staphb/samtools:1.16'
seqyclean_container     = 'staphb/seqyclean:1.10.09'
snp_dists_container     = 'staphb/snp-dists:0.8.2'
vadr_container          = 'staphb/vadr:1.5.1'

//# latest tags (more likely to break workflow, but they update "too frequently")
nextalign_container     = 'nextstrain/nextalign:latest'
nextclade_container     = 'nextstrain/nextclade:latest'
pangolin_container      = 'staphb/pangolin:latest'

//# Workflow parameters --------------------------------------

//# For process seqyclean
//params.cleaner = 'seqyclean'
//# The seqyclean contaminant file MUST be in the container. It is not put through a channel.
//params.seqyclean_contaminant_file = '/Adapters_plus_PhiX_174.fasta'
//params.seqyclean_options = '-minlen 25 -qual'

//# For process fastp
//params.cleaner = 'fastp'
//params.fastp_options = ''

//# For process bwa
//params.aligner = 'bwa'

//# For process minimap2
//params.aligner = 'minimap2'
//params.minimap2_options = '-K 20M'

//# For process fastqc
//params.fastqc = true
//params.fastqc_options = ''

//# For process sort
//# No editable parameters

//# For process filter
//params.filter_options = ''
//params.filter = true

//# For process ivar_trim
//params.trimmer = 'ivar'
//params.ivar_trim_options = ''

//# For process samtools_ampliconclip
//params.trimmer = 'samtools'
//params.samtools_ampliconclip_options = ''

//# For process samtools_markdup
//params.markdup = false
//params.samtools_markdup_options = ''
//params.samtools_fixmate_options = ''

//# trimming can also be skipped with
//params.trimmer = 'none'

//# For process ivar_variants
//params.ivar_variants = true
//# params.minimum_depth is shared with ivar_consensus, summary, and samtools_depth
//params.minimum_depth = 100
//# params.mpileup_depth is shared with ivar_consensus and bcftools_variants
//params.mpileup_depth = 8000
//params.ivar_variants_options = '-q 20 -t 0.6 '

//# For process ivar_consensus
//# params.minimum_depth is shared with ivar_variants, summary, and samtools_depth
//params.minimum_depth = 100
//# params.mpileup_depth is shared with ivar_variants and bcftools_variants
//params.mpileup_depth = 8000
//params.ivar_consensus_options = '-q 20 -t 0.6 -n N'

//# For process fasta_prep
//# No editable parameters

//# For process bcftools_variants
//params.bcftools_variants = true
//# params.mpileup_depth is shared with ivar_variants and ivar_consensus
//params.mpileup_depth = 8000

//# For process samtools_stats
//params.samtools_stats_options = ''
//params.samtools_stats = true

//# For process samtools_coverage
//params.samtools_coverage_options = ''
//params.samtools_coverage = true

//# For process samtools_flagstat
//params.samtools_flagstat_options = ''
//params.samtools_flagstat = true

//# For process samtools_depth
//# params.minimum_depth is shared with ivar_variants, ivar_consensus, and summary
//params.minimum_depth = 100
//params.samtools_depth_options = ''
//params.samtools_depth = true

//# For process kraken2
//params.kraken2_options = ''
//params.kraken2 = true
//params.kraken2_db = ''
//params.kraken2_organism = "Severe acute respiratory syndrome-related coronavirus"

//# For process bedtools_multicov
//params.bedtools_multicov = true
//params.bedtools_options = '-f .1'

//# For process samtools_ampliconstats and samtools_plot_ampliconstats
//params.samtools_ampliconstats_options = ''
//params.samtools_ampliconstats = true
//params.samtools_plot_ampliconstats_options = '-size 1200,900 -size2 1200,900 -size3 1200,900'
//params.samtools_plot_ampliconstats = true

//# For process pangolin
//params.pangolin_options = ''
//params.pangolin = true

//# For process freyja and freyja_aggregate
//params.freya = true
//params.freyja_aggregate = true
//params.freyja_variants_options=''
//params.freyja_demix_options=''
//params.freyja_boot_options='--nb 1000'
//params.freyja_aggregate_options=''
//params.freyja_plot_options=''
//params.freyja_plot_filetype='png'

//# For process nextclade
//params.nextclade_dataset = 'sars-cov-2'
//params.nextclade_options = ''
//params.nextclade = true

//# For process vadr
//params.vadr_options = '--split --glsearch -s -r --nomisc --lowsim5seq 6 --lowsim3seq 6 --alt_fail lowscore,insertnn,deletinn'
//params.vadr_reference = 'sarscov2'
//# If using a different organism, the models must be in the container. Even if the path is changed.
//params.vadr_mdir = '/opt/vadr/vadr-models'
//params.vadr = true
//params.vadr_trim_options = '--minlen 50 --maxlen 30000'

//# For process summary
//# params.minimum_depth is shared with ivar_variants, ivar_consensus, and samtools_depth
//params.minimum_depth = 100

//# For process mafft
//params.msa = 'mafft'
//params.mafft_options = '--maxambiguous 0.5'
//params.relatedness = true

//# For process nextalign
//params.msa = 'nextalign'
//params.nextalign_options = '--include-reference'
//params.relatedness = true

//# For process snpdists
//params.snpdists_options = '-c'
//params.snpdists = true

//# For process iqtree
//params.iqtree2_outgroup = 'MN908947'
//params.iqtree2_options = '-ninit 2 -n 2 -me 0.05 -m GTR'
//params.iqtree2 = true

//* For process multiqc
//params.multiqc = true
//params.multiqc_options = ''

process {
  publishDir = [ path: params.outdir, mode: 'copy' ]

  errorStrategy = 'retry'
  maxRetries = 1

  withLabel: maxcpus {
    cpus = params.maxcpus
  }
  withLabel: medcpus {
    cpus = params.medcpus
  }

  withName:download {
    container = pandas_container
  }

  withName:fastqc{
    container = fastqc_container
  }

  withName:seqyclean{
    container = seqyclean_container
  }

  withName:fastp{
    container = fastp_container
  }

  withName:bwa{
    container = bwa_container
    publishDir = [ path: "${params.outdir}", mode: 'copy', pattern: 'logs/*/*log' ]
  }

  withName:minimap2{
    container = minimap2_container
    publishDir = [ path: "${params.outdir}", mode: 'copy', pattern: 'logs/*/*log' ]
  }

  withName:'ivar_.*'{
    container = ivar_container
  }

  withName:ivar_consensus{
    memory = '8 GB'
    container = ivar_container
  }

  withName:fasta_prep{
    container = pandas_container
  }

  withName:bcftools_variants{
   container = bcftools_container
  }

  withName:kraken2{
    container = kraken2_container
  }

  withName:bedtools_multicov{
    container = bedtools_container
  }

  withName:'samtools_.*'{
    container = samtools_container
  }

  withName:pangolin{
    container = pangolin_container
  }

  withName:'freyja.*'{
    container = freyja_container
  }

  withName:nextclade{
    container = nextclade_container
  }

  withName:vadr{
    container = vadr_container
    errorStrategy = 'ignore'
  }

  withName:summary{
    container = pandas_container
  }

  withName:combine_results{
    container = pandas_container
  }

  withName:mafft{
    container = mafft_container
    errorStrategy = 'retry'
    maxRetries = 2
  }

  withName:nextalign{
    container = nextalign_container
  }

  withName:snpdists{
    container = snp_dists_container
  }

  withName:iqtree2{
   container = iqtree2_container
  }

  withName:'multiqc.*'{
   container = multiqc_container
  }
}
